[1mdiff --git a/mobile/app/Chat.tsx b/mobile/app/Chat.tsx[m
[1mindex 9ee0b21..2a4f6dd 100644[m
[1m--- a/mobile/app/Chat.tsx[m
[1m+++ b/mobile/app/Chat.tsx[m
[36m@@ -1,28 +1,28 @@[m
[31m-import React, { useState, useEffect, useRef, useCallback } from 'react';[m
[31m-import { [m
[31m-  SafeAreaView, [m
[31m-  Text, [m
[31m-  FlatList, [m
[31m-  TouchableOpacity, [m
[31m-  View, [m
[31m-  TextInput, [m
[31m-  KeyboardAvoidingView, [m
[32m+[m[32mimport React, { useState, useEffect, useRef, useCallback } from "react";[m
[32m+[m[32mimport {[m
[32m+[m[32m  SafeAreaView,[m
[32m+[m[32m  Text,[m
[32m+[m[32m  FlatList,[m
[32m+[m[32m  TouchableOpacity,[m
[32m+[m[32m  View,[m
[32m+[m[32m  TextInput,[m
[32m+[m[32m  KeyboardAvoidingView,[m
   Platform,[m
   Alert,[m
   Image,[m
   Linking,[m
   AppState[m
[31m-} from 'react-native';[m
[31m-import { useNavigation, useRoute, RouteProp } from '@react-navigation/native';[m
[31m-import type { NativeStackNavigationProp } from '@react-navigation/native-stack';[m
[32m+[m[32m} from "react-native";[m
[32m+[m[32mimport { useNavigation, useRoute, RouteProp } from "@react-navigation/native";[m
[32m+[m[32mimport type { NativeStackNavigationProp } from "@react-navigation/native-stack";[m
 import { Ionicons } from "@expo/vector-icons";[m
 import { useMessage } from "@/context/MessageContext";[m
 import { useAuth } from "@/context/AuthContext";[m
 import type { Message, RootStackParamList } from "@/types/type";[m
 import ImagePicker from "@/components/ImagePicker";[m
 [m
[31m-type ChatRouteProp = RouteProp<RootStackParamList, 'Chat'>;[m
[31m-type ChatNavigationProp = NativeStackNavigationProp<RootStackParamList, 'Chat'>;[m
[32m+[m[32mtype ChatRouteProp = RouteProp<RootStackParamList, "Chat">;[m
[32m+[m[32mtype ChatNavigationProp = NativeStackNavigationProp<RootStackParamList, "Chat">;[m
 [m
 const MessageBubble = ({[m
   message,[m
[36m@@ -33,19 +33,30 @@[m [mconst MessageBubble = ({[m
   onHandoverResponse,[m
   onClaimResponse,[m
   onConfirmIdPhotoSuccess,[m
[31m-  onMessageSeen[m
[32m+[m[32m  onMessageSeen,[m
 }: {[m
   message: Message;[m
   isOwnMessage: boolean;[m
   conversationId: string;[m
   currentUserId: string;[m
   isCurrentUserPostOwner?: boolean;[m
[31m-  onHandoverResponse?: (messageId: string, status: 'accepted' | 'rejected') => void;[m
[31m-  onClaimResponse?: (messageId: string, status: 'accepted' | 'rejected') => void;[m
[32m+[m[32m  onHandoverResponse?: ([m
[32m+[m[32m    messageId: string,[m
[32m+[m[32m    status: "accepted" | "rejected"[m
[32m+[m[32m  ) => void;[m
[32m+[m[32m  onClaimResponse?: ([m
[32m+[m[32m    messageId: string,[m
[32m+[m[32m    status: "accepted" | "rejected"[m
[32m+[m[32m  ) => void;[m
   onConfirmIdPhotoSuccess?: (messageId: string) => void;[m
   onMessageSeen?: () => void;[m
 }) => {[m
[31m-  const { deleteMessage, confirmHandoverIdPhoto, confirmClaimIdPhoto, updateClaimResponse } = useMessage();[m
[32m+[m[32m  const {[m
[32m+[m[32m    deleteMessage,[m
[32m+[m[32m    confirmHandoverIdPhoto,[m
[32m+[m[32m    confirmClaimIdPhoto,[m
[32m+[m[32m    updateClaimResponse,[m
[32m+[m[32m  } = useMessage();[m
   const [isDeleting, setIsDeleting] = useState(false);[m
   const [showIdPhotoModal, setShowIdPhotoModal] = useState(false);[m
   const [selectedIdPhoto, setSelectedIdPhoto] = useState<string | null>(null);[m
[36m@@ -72,88 +83,96 @@[m [mconst MessageBubble = ({[m
   }, [message.readBy, message.id]);[m
   [m
   const formatTime = (timestamp: any) => {[m
[31m-    if (!timestamp) return '';[m
[32m+[m[32m    if (!timestamp) return "";[m
     const date = timestamp.toDate ? timestamp.toDate() : new Date(timestamp);[m
[31m-    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });[m
[32m+[m[32m    return date.toLocaleTimeString([], { hour: "2-digit", minute: "2-digit" });[m
   };[m
 [m
   // For mobile, visibility detection is handled by FlatList's onViewableItemsChanged[m
   // This component just provides the callback interface[m
 [m
[31m-  const handleHandoverResponse = async (status: 'accepted' | 'rejected') => {[m
[32m+[m[32m  const handleHandoverResponse = async (status: "accepted" | "rejected") => {[m
     if (!onHandoverResponse) return;[m
[31m-    [m
[32m+[m
     try {[m
       // If accepting, show ID photo modal[m
[31m-      if (status === 'accepted') {[m
[32m+[m[32m      if (status === "accepted") {[m
         setShowIdPhotoModal(true);[m
         return;[m
       }[m
[31m-      [m
[32m+[m
       // For rejection, proceed as normal[m
[31m-      const { messageService } = await import('@/utils/firebase');[m
[32m+[m[32m      const { messageService } = await import("@/utils/firebase");[m
       await messageService.updateHandoverResponse([m
         conversationId,[m
         message.id,[m
         status,[m
         currentUserId[m
       );[m
[31m-        [m
[32m+[m
       // Call the callback to update UI[m
       onHandoverResponse(message.id, status);[m
     } catch (error) {[m
[31m-      console.error('Failed to update handover response:', error);[m
[32m+[m[32m      console.error("Failed to update handover response:", error);[m
     }[m
   };[m
 [m
   const handleIdPhotoUpload = async (photoUri: string) => {[m
     try {[m
       setIsUploadingIdPhoto(true);[m
[31m-      [m
[31m-      console.log('üì∏ Starting ID photo upload...', photoUri);[m
[31m-      [m
[32m+[m
[32m+[m[32m      console.log("üì∏ Starting ID photo upload...", photoUri);[m
[32m+[m
       // Upload ID photo to Cloudinary[m
[31m-      const { cloudinaryService } = await import('@/utils/cloudinary');[m
[31m-      const uploadedUrl = await cloudinaryService.uploadImage(photoUri, 'id_photos');[m
[31m-      [m
[31m-      console.log('‚úÖ ID photo uploaded successfully:', uploadedUrl);[m
[31m-      [m
[32m+[m[32m      const { cloudinaryService } = await import("@/utils/cloudinary");[m
[32m+[m[32m      const uploadedUrl = await cloudinaryService.uploadImage([m
[32m+[m[32m        photoUri,[m
[32m+[m[32m        "id_photos"[m
[32m+[m[32m      );[m
[32m+[m
[32m+[m[32m      console.log("‚úÖ ID photo uploaded successfully:", uploadedUrl);[m
[32m+[m
       // Update handover response with ID photo[m
[31m-      const { messageService } = await import('@/utils/firebase');[m
[32m+[m[32m      const { messageService } = await import("@/utils/firebase");[m
       await messageService.updateHandoverResponse([m
         conversationId,[m
         message.id,[m
[31m-        'accepted',[m
[32m+[m[32m        "accepted",[m
         currentUserId,[m
         uploadedUrl[m
       );[m
[31m-      [m
[31m-      console.log('‚úÖ Handover response updated with ID photo');[m
[31m-      [m
[32m+[m
[32m+[m[32m      console.log("‚úÖ Handover response updated with ID photo");[m
[32m+[m
       // Call the callback to update UI[m
[31m-      onHandoverResponse?.(message.id, 'accepted');[m
[31m-      [m
[32m+[m[32m      onHandoverResponse?.(message.id, "accepted");[m
[32m+[m
       // Close modal and reset state[m
       setShowIdPhotoModal(false);[m
       setSelectedIdPhoto(null);[m
[31m-      [m
[32m+[m
       // Show success message[m
[31m-      Alert.alert('Success', 'ID photo uploaded successfully! The item owner will now review and confirm.');[m
[31m-      [m
[32m+[m[32m      Alert.alert([m
[32m+[m[32m        "Success",[m
[32m+[m[32m        "ID photo uploaded successfully! The item owner will now review and confirm."[m
[32m+[m[32m      );[m
     } catch (error: any) {[m
[31m-      console.error('‚ùå Failed to upload ID photo:', error);[m
[31m-      [m
[31m-      let errorMessage = 'Failed to upload ID photo. Please try again.';[m
[31m-      [m
[31m-      if (error.message?.includes('Network request failed')) {[m
[31m-        errorMessage = 'Network error. Please check your internet connection and try again.';[m
[31m-      } else if (error.message?.includes('Cloudinary cloud name not configured')) {[m
[31m-        errorMessage = 'Cloudinary not configured. Please contact support.';[m
[31m-      } else if (error.message?.includes('Upload preset not configured')) {[m
[31m-        errorMessage = 'Upload configuration error. Please contact support.';[m
[32m+[m[32m      console.error("‚ùå Failed to upload ID photo:", error);[m
[32m+[m
[32m+[m[32m      let errorMessage = "Failed to upload ID photo. Please try again.";[m
[32m+[m
[32m+[m[32m      if (error.message?.includes("Network request failed")) {[m
[32m+[m[32m        errorMessage =[m
[32m+[m[32m          "Network error. Please check your internet connection and try again.";[m
[32m+[m[32m      } else if ([m
[32m+[m[32m        error.message?.includes("Cloudinary cloud name not configured")[m
[32m+[m[32m      ) {[m
[32m+[m[32m        errorMessage = "Cloudinary not configured. Please contact support.";[m
[32m+[m[32m      } else if (error.message?.includes("Upload preset not configured")) {[m
[32m+[m[32m        errorMessage = "Upload configuration error. Please contact support.";[m
       }[m
[31m-      [m
[31m-      Alert.alert('Upload Error', errorMessage);[m
[32m+[m
[32m+[m[32m      Alert.alert("Upload Error", errorMessage);[m
     } finally {[m
       setIsUploadingIdPhoto(false);[m
     }[m
[36m@@ -163,17 +182,17 @@[m [mconst MessageBubble = ({[m
     try {[m
       await confirmHandoverIdPhoto(conversationId, message.id);[m
     } catch (error: any) {[m
[31m-      console.error('Failed to confirm ID photo:', error);[m
[31m-      Alert.alert('Error', 'Failed to confirm ID photo. Please try again.');[m
[32m+[m[32m      console.error("Failed to confirm ID photo:", error);[m
[32m+[m[32m      Alert.alert("Error", "Failed to confirm ID photo. Please try again.");[m
     }[m
   };[m
 [m
[31m-  const handleClaimResponse = async (status: 'accepted' | 'rejected') => {[m
[32m+[m[32m  const handleClaimResponse = async (status: "accepted" | "rejected") => {[m
     if (!onClaimResponse) return;[m
 [m
     try {[m
       // If accepting, show ID photo modal for verification[m
[31m-      if (status === 'accepted') {[m
[32m+[m[32m      if (status === "accepted") {[m
         setShowIdPhotoModal(true);[m
         return;[m
       }[m
[36m@@ -184,8 +203,11 @@[m [mconst MessageBubble = ({[m
       // Call the callback to update UI[m
       onClaimResponse(message.id, status);[m
     } catch (error) {[m
[31m-      console.error('Failed to update claim response:', error);[m
[31m-      Alert.alert('Error', 'Failed to update claim response. Please try again.');[m
[32m+[m[32m      console.error("Failed to update claim response:", error);[m
[32m+[m[32m      Alert.alert([m
[32m+[m[32m        "Error",[m
[32m+[m[32m        "Failed to update claim response. Please try again."[m
[32m+[m[32m      );[m
     }[m
   };[m
 [m
[36m@@ -193,52 +215,60 @@[m [mconst MessageBubble = ({[m
     try {[m
       setIsUploadingIdPhoto(true);[m
 [m
[31m-      console.log('üì∏ Starting claim ID photo upload...', photoUri);[m
[31m-      console.log('üì∏ Message type:', message.messageType);[m
[31m-      console.log('üì∏ Conversation ID:', conversationId);[m
[32m+[m[32m      console.log("üì∏ Starting claim ID photo upload...", photoUri);[m
[32m+[m[32m      console.log("üì∏ Message type:", message.messageType);[m
[32m+[m[32m      console.log("üì∏ Conversation ID:", conversationId);[m
 [m
       // Upload ID photo to Cloudinary[m
[31m-      const { cloudinaryService } = await import('@/utils/cloudinary');[m
[31m-      const uploadedUrl = await cloudinaryService.uploadImage(photoUri, 'id_photos');[m
[32m+[m[32m      const { cloudinaryService } = await import("@/utils/cloudinary");[m
[32m+[m[32m      const uploadedUrl = await cloudinaryService.uploadImage([m
[32m+[m[32m        photoUri,[m
[32m+[m[32m        "id_photos"[m
[32m+[m[32m      );[m
 [m
[31m-      console.log('‚úÖ Claim ID photo uploaded successfully:', uploadedUrl);[m
[32m+[m[32m      console.log("‚úÖ Claim ID photo uploaded successfully:", uploadedUrl);[m
 [m
       // Update claim response with ID photo[m
[31m-      const { messageService } = await import('@/utils/firebase');[m
[32m+[m[32m      const { messageService } = await import("@/utils/firebase");[m
       await messageService.updateClaimResponse([m
         conversationId,[m
         message.id,[m
[31m-        'accepted',[m
[32m+[m[32m        "accepted",[m
         currentUserId,[m
         uploadedUrl[m
       );[m
 [m
[31m-      console.log('‚úÖ Claim response updated with ID photo');[m
[32m+[m[32m      console.log("‚úÖ Claim response updated with ID photo");[m
 [m
       // Call the callback to update UI[m
[31m-      onClaimResponse?.(message.id, 'accepted');[m
[32m+[m[32m      onClaimResponse?.(message.id, "accepted");[m
 [m
       // Close modal and reset state[m
       setShowIdPhotoModal(false);[m
       setSelectedIdPhoto(null);[m
 [m
       // Show success message[m
[31m-      Alert.alert('Success', 'ID photo uploaded successfully! The post owner will now review and confirm your claim.');[m
[31m-[m
[32m+[m[32m      Alert.alert([m
[32m+[m[32m        "Success",[m
[32m+[m[32m        "ID photo uploaded successfully! The post owner will now review and confirm your claim."[m
[32m+[m[32m      );[m
     } catch (error: any) {[m
[31m-      console.error('‚ùå Failed to upload claim ID photo:', error);[m
[31m-[m
[31m-      let errorMessage = 'Failed to upload ID photo. Please try again.';[m
[31m-[m
[31m-      if (error.message?.includes('Network request failed')) {[m
[31m-        errorMessage = 'Network error. Please check your internet connection and try again.';[m
[31m-      } else if (error.message?.includes('Cloudinary cloud name not configured')) {[m
[31m-        errorMessage = 'Cloudinary not configured. Please contact support.';[m
[31m-      } else if (error.message?.includes('Upload preset not configured')) {[m
[31m-        errorMessage = 'Upload configuration error. Please contact support.';[m
[32m+[m[32m      console.error("‚ùå Failed to upload claim ID photo:", error);[m
[32m+[m
[32m+[m[32m      let errorMessage = "Failed to upload ID photo. Please try again.";[m
[32m+[m
[32m+[m[32m      if (error.message?.includes("Network request failed")) {[m
[32m+[m[32m        errorMessage =[m
[32m+[m[32m          "Network error. Please check your internet connection and try again.";[m
[32m+[m[32m      } else if ([m
[32m+[m[32m        error.message?.includes("Cloudinary cloud name not configured")[m
[32m+[m[32m      ) {[m
[32m+[m[32m        errorMessage = "Cloudinary not configured. Please contact support.";[m
[32m+[m[32m      } else if (error.message?.includes("Upload preset not configured")) {[m
[32m+[m[32m        errorMessage = "Upload configuration error. Please contact support.";[m
       }[m
 [m
[31m-      Alert.alert('Upload Error', errorMessage);[m
[32m+[m[32m      Alert.alert("Upload Error", errorMessage);[m
     } finally {[m
       setIsUploadingIdPhoto(false);[m
     }[m
[36m@@ -248,36 +278,39 @@[m [mconst MessageBubble = ({[m
     try {[m
       await confirmClaimIdPhoto(conversationId, message.id);[m
       // Call the callback to update UI[m
[31m-      onClaimResponse?.(message.id, 'accepted');[m
[31m-      [m
[32m+[m[32m      onClaimResponse?.(message.id, "accepted");[m
[32m+[m
       // Call the success callback for navigation[m
       onConfirmIdPhotoSuccess?.(message.id);[m
     } catch (error: any) {[m
[31m-      console.error('Failed to confirm claim ID photo:', error);[m
[31m-      Alert.alert('Error', 'Failed to confirm ID photo. Please try again.');[m
[32m+[m[32m      console.error("Failed to confirm claim ID photo:", error);[m
[32m+[m[32m      Alert.alert("Error", "Failed to confirm ID photo. Please try again.");[m
     }[m
   };[m
 [m
   const handleDeleteMessage = async () => {[m
     if (!isOwnMessage) return;[m
[31m-    [m
[32m+[m
     Alert.alert([m
[31m-      'Delete Message',[m
[31m-      'This action cannot be undone. Are you sure you want to delete this message?',[m
[32m+[m[32m      "Delete Message",[m
[32m+[m[32m      "This action cannot be undone. Are you sure you want to delete this message?",[m
       [[m
         {[m
[31m-          text: 'Cancel',[m
[31m-          style: 'cancel',[m
[32m+[m[32m          text: "Cancel",[m
[32m+[m[32m          style: "cancel",[m
         },[m
         {[m
[31m-          text: 'Delete',[m
[31m-          style: 'destructive',[m
[32m+[m[32m          text: "Delete",[m
[32m+[m[32m          style: "destructive",[m
           onPress: async () => {[m
             try {[m
               setIsDeleting(true);[m
               await deleteMessage(conversationId, message.id);[m
             } catch (error: any) {[m
[31m-              Alert.alert('Error', `Failed to delete message: ${error.message}`);[m
[32m+[m[32m              Alert.alert([m
[32m+[m[32m                "Error",[m
[32m+[m[32m                `Failed to delete message: ${error.message}`[m
[32m+[m[32m              );[m
             } finally {[m
               setIsDeleting(false);[m
             }[m
[36m@@ -288,22 +321,26 @@[m [mconst MessageBubble = ({[m
   };[m
 [m
   const renderHandoverRequest = () => {[m
[31m-    if (message.messageType !== 'handover_request') return null;[m
[31m-    [m
[32m+[m[32m    if (message.messageType !== "handover_request") return null;[m
[32m+[m
     const handoverData = message.handoverData;[m
     if (!handoverData) return null;[m
 [m
     // Show different UI based on status and user role[m
[31m-    const canRespond = handoverData.status === 'pending' && !isOwnMessage;[m
[31m-    const canConfirm = handoverData.status === 'pending_confirmation' && !!isCurrentUserPostOwner;[m
[31m-    const isCompleted = handoverData.status === 'accepted' || handoverData.status === 'rejected';[m
[32m+[m[32m    const canRespond = handoverData.status === "pending" && !isOwnMessage;[m
[32m+[m[32m    const canConfirm =[m
[32m+[m[32m      handoverData.status === "pending_confirmation" &&[m
[32m+[m[32m      !!isCurrentUserPostOwner;[m
[32m+[m[32m    const isCompleted =[m
[32m+[m[32m      handoverData.status === "accepted" || handoverData.status === "rejected";[m
 [m
     return ([m
       <View className="mt-3 p-3 bg-blue-50 rounded-lg border border-blue-200">[m
         <Text className="text-sm text-blue-800 mb-2">[m
[31m-          <Text className="font-bold">Handover Request:</Text> {handoverData.postTitle}[m
[32m+[m[32m          <Text className="font-bold">Handover Request:</Text>{" "}[m
[32m+[m[32m          {handoverData.postTitle}[m
         </Text>[m
[31m-        [m
[32m+[m
         {/* Show ID photo if uploaded */}[m
         {handoverData.idPhotoUrl && ([m
           <View className="mb-3 p-2 bg-white rounded border">[m
[36m@@ -313,19 +350,19 @@[m [mconst MessageBubble = ({[m
                 if (handoverData.idPhotoUrl) {[m
                   // For mobile, we'll use a simple alert with option to view[m
                   Alert.alert([m
[31m-                    'View Finder ID Photo',[m
[31m-                    'Would you like to view the full-size finder ID photo?',[m
[32m+[m[32m                    "View Finder ID Photo",[m
[32m+[m[32m                    "Would you like to view the full-size finder ID photo?",[m
                     [[m
[31m-                      { text: 'Cancel', style: 'cancel' },[m
[32m+[m[32m                      { text: "Cancel", style: "cancel" },[m
                       {[m
[31m-                        text: 'View Full Size',[m
[32m+[m[32m                        text: "View Full Size",[m
                         onPress: () => {[m
                           // Open in device's default image viewer[m
                           if (handoverData.idPhotoUrl) {[m
                             Linking.openURL(handoverData.idPhotoUrl);[m
                           }[m
[31m-                        }[m
[31m-                      }[m
[32m+[m[32m                        },[m
[32m+[m[32m                      },[m
                     ][m
                   );[m
                 }[m
[36m@@ -352,19 +389,19 @@[m [mconst MessageBubble = ({[m
                 if (handoverData.ownerIdPhoto) {[m
                   // For mobile, we'll use a simple alert with option to view[m
                   Alert.alert([m
[31m-                    'View Owner ID Photo',[m
[31m-                    'Would you like to view the full-size owner ID photo?',[m
[32m+[m[32m                    "View Owner ID Photo",[m
[32m+[m[32m                    "Would you like to view the full-size owner ID photo?",[m
                     [[m
[31m-                      { text: 'Cancel', style: 'cancel' },[m
[32m+[m[32m                      { text: "Cancel", style: "cancel" },[m
                       {[m
[31m-                        text: 'View Full Size',[m
[32m+[m[32m                        text: "View Full Size",[m
                         onPress: () => {[m
                           // Open in device's default image viewer[m
                           if (handoverData.ownerIdPhoto) {[m
                             Linking.openURL(handoverData.ownerIdPhoto);[m
                           }[m
[31m-                        }[m
[31m-                      }[m
[32m+[m[32m                        },[m
[32m+[m[32m                      },[m
                     ][m
                   );[m
                 }[m
[36m@@ -385,7 +422,9 @@[m [mconst MessageBubble = ({[m
         {/* Show item photos if uploaded */}[m
         {handoverData.itemPhotos && handoverData.itemPhotos.length > 0 && ([m
           <View className="mb-3 p-2 bg-white rounded border">[m
[31m-            <Text className="text-xs text-gray-600 mb-1 font-medium">Item Photos:</Text>[m
[32m+[m[32m            <Text className="text-xs text-gray-600 mb-1 font-medium">[m
[32m+[m[32m              Item Photos:[m
[32m+[m[32m            </Text>[m
             <View className="gap-2">[m
               {handoverData.itemPhotos.map((photo, index) => ([m
                 <View key={index}>[m
[36m@@ -393,15 +432,15 @@[m [mconst MessageBubble = ({[m
                     onPress={() => {[m
                       Alert.alert([m
                         `View Item Photo ${index + 1}`,[m
[31m-                        'Would you like to view the full-size item photo?',[m
[32m+[m[32m                        "Would you like to view the full-size item photo?",[m
                         [[m
[31m-                          { text: 'Cancel', style: 'cancel' },[m
[32m+[m[32m                          { text: "Cancel", style: "cancel" },[m
                           {[m
[31m-                            text: 'View Full Size',[m
[32m+[m[32m                            text: "View Full Size",[m
                             onPress: () => {[m
                               Linking.openURL(photo.url);[m
[31m-                            }[m
[31m-                          }[m
[32m+[m[32m                            },[m
[32m+[m[32m                          },[m
                         ][m
                       );[m
                     }}[m
[36m@@ -428,13 +467,13 @@[m [mconst MessageBubble = ({[m
         {canRespond ? ([m
           <View className="flex-row gap-2">[m
             <TouchableOpacity[m
[31m-              onPress={() => handleHandoverResponse('accepted')}[m
[32m+[m[32m              onPress={() => handleHandoverResponse("accepted")}[m
               className="px-3 py-1 bg-green-500 rounded-md"[m
             >[m
               <Text className="text-white text-xs">Accept</Text>[m
             </TouchableOpacity>[m
             <TouchableOpacity[m
[31m-              onPress={() => handleHandoverResponse('rejected')}[m
[32m+[m[32m              onPress={() => handleHandoverResponse("rejected")}[m
               className="px-3 py-1 bg-red-500 rounded-md"[m
             >[m
               <Text className="text-white text-xs">Reject</Text>[m
[36m@@ -449,7 +488,7 @@[m [mconst MessageBubble = ({[m
               <Text className="text-white text-xs">Confirm ID Photo</Text>[m
             </TouchableOpacity>[m
             <TouchableOpacity[m
[31m-              onPress={() => handleHandoverResponse('rejected')}[m
[32m+[m[32m              onPress={() => handleHandoverResponse("rejected")}[m
               className="px-3 py-1 bg-red-500 rounded-md"[m
             >[m
               <Text className="text-white text-xs">Reject Handover</Text>[m
[36m@@ -457,22 +496,27 @@[m [mconst MessageBubble = ({[m
           </View>[m
         ) : ([m
           <Text className="text-xs text-blue-600">[m
[31m-            Status: <Text className="capitalize font-medium">{handoverData.status}</Text>[m
[32m+[m[32m            Status:{" "}[m
[32m+[m[32m            <Text className="capitalize font-medium">[m
[32m+[m[32m              {handoverData.status}[m
[32m+[m[32m            </Text>[m
             {isCompleted && handoverData.respondedAt && ([m
               <Text className="ml-2">[m
                 at {formatTime(handoverData.respondedAt)}[m
               </Text>[m
             )}[m
[31m-            {handoverData.status === 'accepted' && handoverData.idPhotoConfirmed && ([m
[31m-              <Text className="ml-2 text-green-600">[m
[31m-                ‚úì ID Photo Confirmed[m
[31m-              </Text>[m
[31m-            )}[m
[31m-            {handoverData.status === 'accepted' && handoverData.itemPhotosConfirmed && ([m
[31m-              <Text className="ml-2 text-green-600">[m
[31m-                ‚úì Item Photos Confirmed[m
[31m-              </Text>[m
[31m-            )}[m
[32m+[m[32m            {handoverData.status === "accepted" &&[m
[32m+[m[32m              handoverData.idPhotoConfirmed && ([m
[32m+[m[32m                <Text className="ml-2 text-green-600">[m
[32m+[m[32m                  ‚úì ID Photo Confirmed[m
[32m+[m[32m                </Text>[m
[32m+[m[32m              )}[m
[32m+[m[32m            {handoverData.status === "accepted" &&[m
[32m+[m[32m              handoverData.itemPhotosConfirmed && ([m
[32m+[m[32m                <Text className="ml-2 text-green-600">[m
[32m+[m[32m                  ‚úì Item Photos Confirmed[m
[32m+[m[32m                </Text>[m
[32m+[m[32m              )}[m
           </Text>[m
         )}[m
       </View>[m
[36m@@ -480,13 +524,14 @@[m [mconst MessageBubble = ({[m
   };[m
 [m
   const renderHandoverResponse = () => {[m
[31m-    if (message.messageType !== 'handover_response') return null;[m
[31m-    [m
[32m+[m[32m    if (message.messageType !== "handover_response") return null;[m
[32m+[m
     const handoverData = message.handoverData;[m
     if (!handoverData) return null;[m
 [m
[31m-    const statusColor = handoverData.status === 'accepted' ? 'text-green-600' : 'text-red-600';[m
[31m-    const statusIcon = handoverData.status === 'accepted' ? '‚úÖ' : '‚ùå';[m
[32m+[m[32m    const statusColor =[m
[32m+[m[32m      handoverData.status === "accepted" ? "text-green-600" : "text-red-600";[m
[32m+[m[32m    const statusIcon = handoverData.status === "accepted" ? "‚úÖ" : "‚ùå";[m
 [m
     return ([m
       <View className="mt-2 p-2 bg-gray-50 rounded-lg border border-gray-200">[m
[36m@@ -496,7 +541,9 @@[m [mconst MessageBubble = ({[m
             {handoverData.status}[m
           </Text>[m
           {handoverData.responseMessage && ([m
[31m-            <Text className="text-gray-600 text-sm">- {handoverData.responseMessage}</Text>[m
[32m+[m[32m            <Text className="text-gray-600 text-sm">[m
[32m+[m[32m              - {handoverData.responseMessage}[m
[32m+[m[32m            </Text>[m
           )}[m
         </View>[m
       </View>[m
[36m@@ -504,52 +551,61 @@[m [mconst MessageBubble = ({[m
   };[m
 [m
   const renderClaimRequest = () => {[m
[31m-    if (message.messageType !== 'claim_request') return null;[m
[32m+[m[32m    if (message.messageType !== "claim_request") return null;[m
 [m
     const claimData = message.claimData;[m
     if (!claimData) return null;[m
 [m
     // Show different UI based on status and user role[m
[31m-    const canRespond = claimData.status === 'pending' && !isOwnMessage;[m
[31m-    const canConfirm = claimData.status === 'pending_confirmation' && !isOwnMessage;[m
[31m-    const isCompleted = claimData.status === 'accepted' || claimData.status === 'rejected';[m
[32m+[m[32m    const canRespond = claimData.status === "pending" && !isOwnMessage;[m
[32m+[m[32m    const canConfirm =[m
[32m+[m[32m      claimData.status === "pending_confirmation" && !isOwnMessage;[m
[32m+[m[32m    const isCompleted =[m
[32m+[m[32m      claimData.status === "accepted" || claimData.status === "rejected";[m
 [m
     return ([m
       <View className="mt-3 p-3 bg-purple-50 rounded-lg border border-purple-200">[m
         <Text className="text-sm text-purple-800 mb-2">[m
[31m-          <Text className="font-bold">Claim Request:</Text> {claimData.postTitle}[m
[32m+[m[32m          <Text className="font-bold">Claim Request:</Text>{" "}[m
[32m+[m[32m          {claimData.postTitle}[m
         </Text>[m
 [m
         {/* Show claim reason if provided */}[m
         {claimData.claimReason && ([m
           <View className="mb-3 p-2 bg-white rounded border">[m
[31m-            <Text className="text-xs text-gray-600 mb-1 font-medium">Claim Reason:</Text>[m
[31m-            <Text className="text-sm text-gray-800">{claimData.claimReason}</Text>[m
[32m+[m[32m            <Text className="text-xs text-gray-600 mb-1 font-medium">[m
[32m+[m[32m              Claim Reason:[m
[32m+[m[32m            </Text>[m
[32m+[m[32m            <Text className="text-sm text-gray-800">[m
[32m+[m[32m              {claimData.claimReason}[m
[32m+[m[32m            </Text>[m
           </View>[m
         )}[m
 [m
         {/* Show claimer's ID photo if uploaded */}[m
         {claimData.idPhotoUrl && ([m
           <View className="mb-3 p-2 bg-white rounded border">[m
[31m-            <Text className="text-xs text-gray-600 mb-1">Claimer ID Photo:</Text>[m
[32m+[m[32m            <Text className="text-xs text-gray-600 mb-1">[m
[32m+[m[32m              Claimer ID Photo:[m
[32m+[m[32m            </Text>[m
             <TouchableOpacity[m
               onPress={() => {[m
                 if (claimData.idPhotoUrl) {[m
                   // For mobile, we'll use a simple alert with option to view[m
                   Alert.alert([m
[31m-                    'View Claimer ID Photo',[m
[31m-                    'Would you like to view the full-size claimer ID photo?',[m
[32m+[m[32m                    "View Claimer ID Photo",[m
[32m+[m[32m                    "Would you like to view the full-size claimer ID photo?",[m
                     [[m
[31m-                      { text: 'Cancel', style: 'cancel' },[m
[32m+[m[32m                      { text: "Cancel", style: "cancel" },[m
                       {[m
[31m-                        text: 'View Full Size',[m
[32m+[m[32m                        text: "View Full Size",[m
                         onPress: () => {[m
                           // Open in device's default image viewer[m
                           if (claimData.idPhotoUrl) {[m
                             Linking.openURL(claimData.idPhotoUrl);[m
                           }[m
[31m-                        }[m
[31m-                      }[m
[32m+[m[32m                        },[m
[32m+[m[32m                      },[m
                     ][m
                   );[m
                 }[m
[36m@@ -576,19 +632,19 @@[m [mconst MessageBubble = ({[m
                 if (claimData.ownerIdPhoto) {[m
                   // For mobile, we'll use a simple alert with option to view[m
                   Alert.alert([m
[31m-                    'View Owner ID Photo',[m
[31m-                    'Would you like to view the full-size owner ID photo?',[m
[32m+[m[32m                    "View Owner ID Photo",[m
[32m+[m[32m                    "Would you like to view the full-size owner ID photo?",[m
                     [[m
[31m-                      { text: 'Cancel', style: 'cancel' },[m
[32m+[m[32m                      { text: "Cancel", style: "cancel" },[m
                       {[m
[31m-                        text: 'View Full Size',[m
[32m+[m[32m                        text: "View Full Size",[m
                         onPress: () => {[m
                           // Open in device's default image viewer[m
                           if (claimData.ownerIdPhoto) {[m
                             Linking.openURL(claimData.ownerIdPhoto);[m
                           }[m
[31m-                        }[m
[31m-                      }[m
[32m+[m[32m                        },[m
[32m+[m[32m                      },[m
                     ][m
                   );[m
                 }[m
[36m@@ -609,7 +665,9 @@[m [mconst MessageBubble = ({[m
         {/* Show evidence photos if uploaded */}[m
         {claimData.evidencePhotos && claimData.evidencePhotos.length > 0 && ([m
           <View className="mb-3 p-2 bg-white rounded border">[m
[31m-            <Text className="text-xs text-gray-600 mb-1 font-medium">Evidence Photos:</Text>[m
[32m+[m[32m            <Text className="text-xs text-gray-600 mb-1 font-medium">[m
[32m+[m[32m              Evidence Photos:[m
[32m+[m[32m            </Text>[m
             <View className="gap-2">[m
               {claimData.evidencePhotos.map((photo, index) => ([m
                 <View key={index}>[m
[36m@@ -617,15 +675,15 @@[m [mconst MessageBubble = ({[m
                     onPress={() => {[m
                       Alert.alert([m
                         `View Evidence Photo ${index + 1}`,[m
[31m-                        'Would you like to view the full-size evidence photo?',[m
[32m+[m[32m                        "Would you like to view the full-size evidence photo?",[m
                         [[m
[31m-                          { text: 'Cancel', style: 'cancel' },[m
[32m+[m[32m                          { text: "Cancel", style: "cancel" },[m
                           {[m
[31m-                            text: 'View Full Size',[m
[32m+[m[32m                            text: "View Full Size",[m
                             onPress: () => {[m
                               Linking.openURL(photo.url);[m
[31m-                            }[m
[31m-                          }[m
[32m+[m[32m                            },[m
[32m+[m[32m                          },[m
                         ][m
                       );[m
                     }}[m
[36m@@ -649,58 +707,62 @@[m [mconst MessageBubble = ({[m
         )}[m
 [m
         {/* Show legacy verification photos if exists (for backward compatibility) */}[m
[31m-        {claimData.verificationPhotos && claimData.verificationPhotos.length > 0 && !claimData.evidencePhotos && ([m
[31m-          <View className="mb-3 p-2 bg-white rounded border">[m
[31m-            <Text className="text-xs text-gray-600 mb-1 font-medium">Verification Photos:</Text>[m
[31m-            <View className="gap-2">[m
[31m-              {claimData.verificationPhotos.map((photo, index) => ([m
[31m-                <View key={index}>[m
[31m-                  <TouchableOpacity[m
[31m-                    onPress={() => {[m
[31m-                      Alert.alert([m
[31m-                        `View Verification Photo ${index + 1}`,[m
[31m-                        'Would you like to view the full-size verification photo?',[m
[31m-                        [[m
[31m-                          { text: 'Cancel', style: 'cancel' },[m
[31m-                          {[m
[31m-        